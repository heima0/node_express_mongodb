<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <link rel='stylesheet' href='/css/bootstrap.min.css' />
    <link rel='stylesheet' href='/css/message.css' />
  </head>
  <body>

    <!-- 导航 -->

    <% include ./header/index.ejs %>
    
    <section class="container">
      <form>
        <div class="form-group classify">
          <label for="">类型:</label>
          <% classify1.forEach(function(e,i){ %>
            <% if(i == 0) { %>
              <button type="button" class="btn btn-primary"><%= e.title %></button>
            <% }else{ %>
              <button type="button" class="btn"><%= e.title %></button>
            <% } %>
          <% }) %>
        </div>
        <div class="form-group">
          <label for="">标题:</label>
          <input id="title" type="text" class="form-control">
        </div>
        <div class="form-group">
          <label for="">内容:</label>
          <div id="editor">
          </div>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-success">发布</button>
            <button type="reset" class="btn btn-default">重置</button>
            <a href="/">回到首页</a>
        </div>
      </form>
    </section>

    <script type="text/javascript" src="/js/jquery.min.js"></script>
    <script type="text/javascript" src="/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/js/message.min.js"></script>
    <script type="text/javascript" src="/js/wangEditor.min.js"></script>
  </body>
</html>
<script type="text/javascript">

  // 富文本初始化
  var E = window.wangEditor
  var editor = new E('#editor')
  // 或者 var editor = new E( document.getElementById('editor') )
  editor.customConfig.uploadImgServer = '/api/v1/uploadImg'
  // editor.customConfig.showLinkImg = false
  editor.customConfig.uploadFileName = 'wangEditor_uploadImg'
  editor.customConfig.uploadImgHooks = {
      success: function (xhr, editor, result) {
          // 图片上传并返回结果，图片插入成功之后触发
          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果
      },
      // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置
      // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）
      customInsert: function (insertImg, result, editor) {
        console.log(result)
          // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）
          // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果

          // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：
          var url = result.imgurl
          insertImg(url)

          // result 必须是一个 JSON 格式字符串！！！否则报错
      }
  }

  editor.create()

  // 提交事件
  $('form').submit(submit);
  function submit(event) {
    // 需要再次判断是否登录，以免用户自己注销
    checkUser();
    console.log($.cookie('mongo_info'))
    event.preventDefault();
    let info = {};
    info.title = $.trim($('#title').val());
    info.content = editor.txt.html();
    info.author = JSON.parse($.cookie('mongo_info')).nickname;
    info.author_id = JSON.parse($.cookie('mongo_info'))._id;
    info.hot = 0;
    info.time = new Date().toLocaleString();
    info.classify = $('.classify').find('button.btn-primary').text();
    console.log(info);

    // 验证内容是否为空
    if(info.title !== '' &&  $.trim(editor.txt.text()) !== ''){
      // 禁止重复提交
      $('[type="submit"]').attr('disabled', 'disabled')
      // 将信息发送给后台 title，content，author, author_id, hot,classify,time
      $.ajax({
        url: '/api/v1/commit',
        type: 'post',
        data: info,
      })
      .done(function(result) {
        console.log(result);
        if(result.err == 200){
          $.message('提交成功');
          setTimeout(function(){
            window.location.href = '/';
          }, 2000)
        }else{
          $.message('服务器繁忙，请稍后再试')
        }
      })
      .fail(function() {
        console.log("error");
      })
      .always(function() {
        console.log("complete");
      });
      

    }else{
      $.message({message: '请完善您的帖子信息', type: 'warning'})
    }
  }

  // 表单初始化
  $('form button[type="reset"]').click(reset);
  function reset(){
    editor.txt.html('')
    $('.classify button').eq(0).addClass('btn-primary').siblings().removeClass('btn-primary')
  }

  // 分类事件
  $('.classify').on('click', 'button', function(){
    $(this).siblings('button').removeClass('btn-primary').end().addClass('btn-primary')
  })

  function checkUser(){
    if($.cookie('mongo_info')){
      return true;
    }else{
      $.message('请登录后操作');
      setTimeout(function(){
        window.location.href = '/login';
      }, 2500)
      return false;
    }
  }

  // 判断是否登录
  checkUser();



</script>

